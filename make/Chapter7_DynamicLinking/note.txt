1.gcc -g optin 
    (1)$ file Lib*
        Lib1.so: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, BuildID[sha1]=11a5e64cde7861c76c9206235fd0b3752d148c66, with debug_info, not stripped
        Lib.so:  ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, BuildID[sha1]=1dad53415858f09830b959ddbdc340b2bde2bfda, not stripped

    (2)$ readelf -S Lib*

        File: Lib1.so
        There are 36 section headers, starting at offset 0x38a0:

        Section Headers:
        [Nr] Name              Type             Address           Offset
            Size              EntSize          Flags  Link  Info  Align
        [ 0]                   NULL             0000000000000000  00000000
            0000000000000000  0000000000000000           0     0     0
        [ 1] .note.gnu.pr[...] NOTE             00000000000002a8  000002a8
            0000000000000020  0000000000000000   A       0     0     8
        [ 2] .note.gnu.bu[...] NOTE             00000000000002c8  000002c8
            0000000000000024  0000000000000000   A       0     0     4
        [ 3] .gnu.hash         GNU_HASH         00000000000002f0  000002f0
            0000000000000024  0000000000000000   A       4     0     8
        [ 4] .dynsym           DYNSYM           0000000000000318  00000318
            00000000000000a8  0000000000000018   A       5     1     8
        [ 5] .dynstr           STRTAB           00000000000003c0  000003c0
            0000000000000079  0000000000000000   A       0     0     1
        [ 6] .gnu.version      VERSYM           000000000000043a  0000043a
            000000000000000e  0000000000000002   A       4     0     2
        [ 7] .gnu.version_r    VERNEED          0000000000000448  00000448
            0000000000000020  0000000000000000   A       5     1     8
        [ 8] .rela.dyn         RELA             0000000000000468  00000468
            00000000000000a8  0000000000000018   A       4     0     8
        [ 9] .rela.plt         RELA             0000000000000510  00000510
            0000000000000018  0000000000000018  AI       4    23     8
        [10] .init             PROGBITS         0000000000001000  00001000
            000000000000001b  0000000000000000  AX       0     0     4
        [11] .plt              PROGBITS         0000000000001020  00001020
            0000000000000020  0000000000000010  AX       0     0     16
        [12] .plt.got          PROGBITS         0000000000001040  00001040
            0000000000000010  0000000000000010  AX       0     0     16
        [13] .plt.sec          PROGBITS         0000000000001050  00001050
            0000000000000010  0000000000000010  AX       0     0     16
        [14] .text             PROGBITS         0000000000001060  00001060
            00000000000000e4  0000000000000000  AX       0     0     16
        [15] .fini             PROGBITS         0000000000001144  00001144
            000000000000000d  0000000000000000  AX       0     0     4
        [16] .rodata           PROGBITS         0000000000002000  00002000
            0000000000000019  0000000000000000   A       0     0     1
        [17] .eh_frame_hdr     PROGBITS         000000000000201c  0000201c
            000000000000002c  0000000000000000   A       0     0     4
        [18] .eh_frame         PROGBITS         0000000000002048  00002048
            0000000000000094  0000000000000000   A       0     0     8
        [19] .init_array       INIT_ARRAY       0000000000003e10  00002e10
            0000000000000008  0000000000000008  WA       0     0     8
        [20] .fini_array       FINI_ARRAY       0000000000003e18  00002e18
            0000000000000008  0000000000000008  WA       0     0     8
        [21] .dynamic          DYNAMIC          0000000000003e20  00002e20
            00000000000001c0  0000000000000010  WA       5     0     8
        [22] .got              PROGBITS         0000000000003fe0  00002fe0
            0000000000000020  0000000000000008  WA       0     0     8
        [23] .got.plt          PROGBITS         0000000000004000  00003000
            0000000000000020  0000000000000008  WA       0     0     8
        [24] .data             PROGBITS         0000000000004020  00003020
            0000000000000008  0000000000000000  WA       0     0     8
        [25] .bss              NOBITS           0000000000004028  00003028
            0000000000000008  0000000000000000  WA       0     0     1
        [26] .comment          PROGBITS         0000000000000000  00003028
            0000000000000026  0000000000000001  MS       0     0     1
        [27] .debug_aranges    PROGBITS         0000000000000000  0000304e
            0000000000000030  0000000000000000           0     0     1
        [28] .debug_info       PROGBITS         0000000000000000  0000307e
            00000000000000b9  0000000000000000           0     0     1
        [29] .debug_abbrev     PROGBITS         0000000000000000  00003137
            0000000000000087  0000000000000000           0     0     1
        [30] .debug_line       PROGBITS         0000000000000000  000031be
            0000000000000059  0000000000000000           0     0     1
        [31] .debug_str        PROGBITS         0000000000000000  00003217
            00000000000000e8  0000000000000001  MS       0     0     1
        [32] .debug_line_str   PROGBITS         0000000000000000  000032ff
            0000000000000057  0000000000000001  MS       0     0     1
        [33] .symtab           SYMTAB           0000000000000000  00003358
            0000000000000270  0000000000000018          34    20     8
        [34] .strtab           STRTAB           0000000000000000  000035c8
            000000000000017a  0000000000000000           0     0     1
        [35] .shstrtab         STRTAB           0000000000000000  00003742
            000000000000015d  0000000000000000           0     0     1
        Key to Flags:
        W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
        L (link order), O (extra OS processing required), G (group), T (TLS),
        C (compressed), x (unknown), o (OS specific), E (exclude),
        D (mbind), l (large), p (processor specific)

        File: Lib.so
        There are 30 section headers, starting at offset 0x3548:

        Section Headers:
        [Nr] Name              Type             Address           Offset
            Size              EntSize          Flags  Link  Info  Align
        [ 0]                   NULL             0000000000000000  00000000
            0000000000000000  0000000000000000           0     0     0
        [ 1] .note.gnu.pr[...] NOTE             00000000000002a8  000002a8
            0000000000000020  0000000000000000   A       0     0     8
        [ 2] .note.gnu.bu[...] NOTE             00000000000002c8  000002c8
            0000000000000024  0000000000000000   A       0     0     4
        [ 3] .gnu.hash         GNU_HASH         00000000000002f0  000002f0
            0000000000000024  0000000000000000   A       4     0     8
        [ 4] .dynsym           DYNSYM           0000000000000318  00000318
            00000000000000a8  0000000000000018   A       5     1     8
        [ 5] .dynstr           STRTAB           00000000000003c0  000003c0
            0000000000000079  0000000000000000   A       0     0     1
        [ 6] .gnu.version      VERSYM           000000000000043a  0000043a
            000000000000000e  0000000000000002   A       4     0     2
        [ 7] .gnu.version_r    VERNEED          0000000000000448  00000448
            0000000000000020  0000000000000000   A       5     1     8
        [ 8] .rela.dyn         RELA             0000000000000468  00000468
            00000000000000a8  0000000000000018   A       4     0     8
        [ 9] .rela.plt         RELA             0000000000000510  00000510
            0000000000000018  0000000000000018  AI       4    23     8
        [10] .init             PROGBITS         0000000000001000  00001000
            000000000000001b  0000000000000000  AX       0     0     4
        [11] .plt              PROGBITS         0000000000001020  00001020
            0000000000000020  0000000000000010  AX       0     0     16
        [12] .plt.got          PROGBITS         0000000000001040  00001040
            0000000000000010  0000000000000010  AX       0     0     16
        [13] .plt.sec          PROGBITS         0000000000001050  00001050
            0000000000000010  0000000000000010  AX       0     0     16
        [14] .text             PROGBITS         0000000000001060  00001060
            00000000000000e4  0000000000000000  AX       0     0     16
        [15] .fini             PROGBITS         0000000000001144  00001144
            000000000000000d  0000000000000000  AX       0     0     4
        [16] .rodata           PROGBITS         0000000000002000  00002000
            0000000000000019  0000000000000000   A       0     0     1
        [17] .eh_frame_hdr     PROGBITS         000000000000201c  0000201c
            000000000000002c  0000000000000000   A       0     0     4
        [18] .eh_frame         PROGBITS         0000000000002048  00002048
            0000000000000094  0000000000000000   A       0     0     8
        [19] .init_array       INIT_ARRAY       0000000000003e10  00002e10
            0000000000000008  0000000000000008  WA       0     0     8
        [20] .fini_array       FINI_ARRAY       0000000000003e18  00002e18
            0000000000000008  0000000000000008  WA       0     0     8
        [21] .dynamic          DYNAMIC          0000000000003e20  00002e20
            00000000000001c0  0000000000000010  WA       5     0     8
        [22] .got              PROGBITS         0000000000003fe0  00002fe0
            0000000000000020  0000000000000008  WA       0     0     8
        [23] .got.plt          PROGBITS         0000000000004000  00003000
            0000000000000020  0000000000000008  WA       0     0     8
        [24] .data             PROGBITS         0000000000004020  00003020
            0000000000000008  0000000000000000  WA       0     0     8
        [25] .bss              NOBITS           0000000000004028  00003028
            0000000000000008  0000000000000000  WA       0     0     1
        [26] .comment          PROGBITS         0000000000000000  00003028
            0000000000000026  0000000000000001  MS       0     0     1
        [27] .symtab           SYMTAB           0000000000000000  00003050
            0000000000000270  0000000000000018          28    20     8
        [28] .strtab           STRTAB           0000000000000000  000032c0
            000000000000017a  0000000000000000           0     0     1
        [29] .shstrtab         STRTAB           0000000000000000  0000343a
            000000000000010d  0000000000000000           0     0     1
        Key to Flags:
        W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
        L (link order), O (extra OS processing required), G (group), T (TLS),
        C (compressed), x (unknown), o (OS specific), E (exclude),
        D (mbind), l (large), p (processor specific)

2.strip command
    strip Lib.so
    cut symtab and strtab segment
    (1)file Lib*
        Lib1.so: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, BuildID[sha1]=11a5e64cde7861c76c9206235fd0b3752d148c66, with debug_info, not stripped
        Lib.so:  ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, BuildID[sha1]=1dad53415858f09830b959ddbdc340b2bde2bfda, stripped
    (2)$ readelf -S Lib*
        File: Lib1.so
        There are 36 section headers, starting at offset 0x38a0:

        Section Headers:
        [Nr] Name              Type             Address           Offset
            Size              EntSize          Flags  Link  Info  Align
        [ 0]                   NULL             0000000000000000  00000000
            0000000000000000  0000000000000000           0     0     0
        [ 1] .note.gnu.pr[...] NOTE             00000000000002a8  000002a8
            0000000000000020  0000000000000000   A       0     0     8
        [ 2] .note.gnu.bu[...] NOTE             00000000000002c8  000002c8
            0000000000000024  0000000000000000   A       0     0     4
        [ 3] .gnu.hash         GNU_HASH         00000000000002f0  000002f0
            0000000000000024  0000000000000000   A       4     0     8
        [ 4] .dynsym           DYNSYM           0000000000000318  00000318
            00000000000000a8  0000000000000018   A       5     1     8
        [ 5] .dynstr           STRTAB           00000000000003c0  000003c0
            0000000000000079  0000000000000000   A       0     0     1
        [ 6] .gnu.version      VERSYM           000000000000043a  0000043a
            000000000000000e  0000000000000002   A       4     0     2
        [ 7] .gnu.version_r    VERNEED          0000000000000448  00000448
            0000000000000020  0000000000000000   A       5     1     8
        [ 8] .rela.dyn         RELA             0000000000000468  00000468
            00000000000000a8  0000000000000018   A       4     0     8
        [ 9] .rela.plt         RELA             0000000000000510  00000510
            0000000000000018  0000000000000018  AI       4    23     8
        [10] .init             PROGBITS         0000000000001000  00001000
            000000000000001b  0000000000000000  AX       0     0     4
        [11] .plt              PROGBITS         0000000000001020  00001020
            0000000000000020  0000000000000010  AX       0     0     16
        [12] .plt.got          PROGBITS         0000000000001040  00001040
            0000000000000010  0000000000000010  AX       0     0     16
        [13] .plt.sec          PROGBITS         0000000000001050  00001050
            0000000000000010  0000000000000010  AX       0     0     16
        [14] .text             PROGBITS         0000000000001060  00001060
            00000000000000e4  0000000000000000  AX       0     0     16
        [15] .fini             PROGBITS         0000000000001144  00001144
            000000000000000d  0000000000000000  AX       0     0     4
        [16] .rodata           PROGBITS         0000000000002000  00002000
            0000000000000019  0000000000000000   A       0     0     1
        [17] .eh_frame_hdr     PROGBITS         000000000000201c  0000201c
            000000000000002c  0000000000000000   A       0     0     4
        [18] .eh_frame         PROGBITS         0000000000002048  00002048
            0000000000000094  0000000000000000   A       0     0     8
        [19] .init_array       INIT_ARRAY       0000000000003e10  00002e10
            0000000000000008  0000000000000008  WA       0     0     8
        [20] .fini_array       FINI_ARRAY       0000000000003e18  00002e18
            0000000000000008  0000000000000008  WA       0     0     8
        [21] .dynamic          DYNAMIC          0000000000003e20  00002e20
            00000000000001c0  0000000000000010  WA       5     0     8
        [22] .got              PROGBITS         0000000000003fe0  00002fe0
            0000000000000020  0000000000000008  WA       0     0     8
        [23] .got.plt          PROGBITS         0000000000004000  00003000
            0000000000000020  0000000000000008  WA       0     0     8
        [24] .data             PROGBITS         0000000000004020  00003020
            0000000000000008  0000000000000000  WA       0     0     8
        [25] .bss              NOBITS           0000000000004028  00003028
            0000000000000008  0000000000000000  WA       0     0     1
        [26] .comment          PROGBITS         0000000000000000  00003028
            0000000000000026  0000000000000001  MS       0     0     1
        [27] .debug_aranges    PROGBITS         0000000000000000  0000304e
            0000000000000030  0000000000000000           0     0     1
        [28] .debug_info       PROGBITS         0000000000000000  0000307e
            00000000000000b9  0000000000000000           0     0     1
        [29] .debug_abbrev     PROGBITS         0000000000000000  00003137
            0000000000000087  0000000000000000           0     0     1
        [30] .debug_line       PROGBITS         0000000000000000  000031be
            0000000000000059  0000000000000000           0     0     1
        [31] .debug_str        PROGBITS         0000000000000000  00003217
            00000000000000e8  0000000000000001  MS       0     0     1
        [32] .debug_line_str   PROGBITS         0000000000000000  000032ff
            0000000000000057  0000000000000001  MS       0     0     1
        [33] .symtab           SYMTAB           0000000000000000  00003358
            0000000000000270  0000000000000018          34    20     8
        [34] .strtab           STRTAB           0000000000000000  000035c8
            000000000000017a  0000000000000000           0     0     1
        [35] .shstrtab         STRTAB           0000000000000000  00003742
            000000000000015d  0000000000000000           0     0     1
        Key to Flags:
        W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
        L (link order), O (extra OS processing required), G (group), T (TLS),
        C (compressed), x (unknown), o (OS specific), E (exclude),
        D (mbind), l (large), p (processor specific)

        File: Lib.so
        There are 28 section headers, starting at offset 0x3150:

        Section Headers:
        [Nr] Name              Type             Address           Offset
            Size              EntSize          Flags  Link  Info  Align
        [ 0]                   NULL             0000000000000000  00000000
            0000000000000000  0000000000000000           0     0     0
        [ 1] .note.gnu.pr[...] NOTE             00000000000002a8  000002a8
            0000000000000020  0000000000000000   A       0     0     8
        [ 2] .note.gnu.bu[...] NOTE             00000000000002c8  000002c8
            0000000000000024  0000000000000000   A       0     0     4
        [ 3] .gnu.hash         GNU_HASH         00000000000002f0  000002f0
            0000000000000024  0000000000000000   A       4     0     8
        [ 4] .dynsym           DYNSYM           0000000000000318  00000318
            00000000000000a8  0000000000000018   A       5     1     8
        [ 5] .dynstr           STRTAB           00000000000003c0  000003c0
            0000000000000079  0000000000000000   A       0     0     1
        [ 6] .gnu.version      VERSYM           000000000000043a  0000043a
            000000000000000e  0000000000000002   A       4     0     2
        [ 7] .gnu.version_r    VERNEED          0000000000000448  00000448
            0000000000000020  0000000000000000   A       5     1     8
        [ 8] .rela.dyn         RELA             0000000000000468  00000468
            00000000000000a8  0000000000000018   A       4     0     8
        [ 9] .rela.plt         RELA             0000000000000510  00000510
            0000000000000018  0000000000000018  AI       4    23     8
        [10] .init             PROGBITS         0000000000001000  00001000
            000000000000001b  0000000000000000  AX       0     0     4
        [11] .plt              PROGBITS         0000000000001020  00001020
            0000000000000020  0000000000000010  AX       0     0     16
        [12] .plt.got          PROGBITS         0000000000001040  00001040
            0000000000000010  0000000000000010  AX       0     0     16
        [13] .plt.sec          PROGBITS         0000000000001050  00001050
            0000000000000010  0000000000000010  AX       0     0     16
        [14] .text             PROGBITS         0000000000001060  00001060
            00000000000000e4  0000000000000000  AX       0     0     16
        [15] .fini             PROGBITS         0000000000001144  00001144
            000000000000000d  0000000000000000  AX       0     0     4
        [16] .rodata           PROGBITS         0000000000002000  00002000
            0000000000000019  0000000000000000   A       0     0     1
        [17] .eh_frame_hdr     PROGBITS         000000000000201c  0000201c
            000000000000002c  0000000000000000   A       0     0     4
        [18] .eh_frame         PROGBITS         0000000000002048  00002048
            0000000000000094  0000000000000000   A       0     0     8
        [19] .init_array       INIT_ARRAY       0000000000003e10  00002e10
            0000000000000008  0000000000000008  WA       0     0     8
        [20] .fini_array       FINI_ARRAY       0000000000003e18  00002e18
            0000000000000008  0000000000000008  WA       0     0     8
        [21] .dynamic          DYNAMIC          0000000000003e20  00002e20
            00000000000001c0  0000000000000010  WA       5     0     8
        [22] .got              PROGBITS         0000000000003fe0  00002fe0
            0000000000000020  0000000000000008  WA       0     0     8
        [23] .got.plt          PROGBITS         0000000000004000  00003000
            0000000000000020  0000000000000008  WA       0     0     8
        [24] .data             PROGBITS         0000000000004020  00003020
            0000000000000008  0000000000000000  WA       0     0     8
        [25] .bss              NOBITS           0000000000004028  00003028
            0000000000000008  0000000000000000  WA       0     0     1
        [26] .comment          PROGBITS         0000000000000000  00003028
            0000000000000026  0000000000000001  MS       0     0     1
        [27] .shstrtab         STRTAB           0000000000000000  0000304e
            00000000000000fd  0000000000000000           0     0     1
        Key to Flags:
        W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
        L (link order), O (extra OS processing required), G (group), T (TLS),
        C (compressed), x (unknown), o (OS specific), E (exclude),
        D (mbind), l (large), p (processor specific)